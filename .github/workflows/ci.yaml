name: CLUS GitHub Actions Demo 

on: 
  push:
    branches:
      - main

env:
  APP_NAME: '${{ github.repository }}'
  REGISTRY: ghcr.io

jobs:
  test:
    name: Python Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository 
        uses: actions/checkout@v4
      - name: Setting up Python 
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt --break-system-packages
      - name: Executing Unit Test
        run: |
          python -m unittest discover -v
  build:
    name: Build & Publish Docker Image
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    outputs:
      image-tag: '${{ steps.meta.outputs.tags }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Login to Container Registry 
        uses: docker/login-action@v3
        with:
          registry: '${{ env.REGISTRY }}'
          username: '${{ github.actor }}'
          password: '${{ secrets.GITHUB_TOKEN}}'
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with: 
          images: '${{ env.REGISTRY }}/${{ env.APP_NAME }}'
          tags: | 
            type=sha, format=short
      - name: Build & Publish Docker Image to GitHab Package
        uses: docker/build-push-action@v5
        with: 
          context: . 
          push: true
          tags: '${{ steps.meta.outputs.tags}}'
          labels: '${{ steps.meta.outputs.labels}}'
  deploy:
    name: Deploy Python application
    runs-on: ubuntu-latest
    needs: build
    steps: 
      - name: Deploy to Render
        uses: fjogeleit/http-request-action@v1
        with:
          url: https://api.render.com/v1/services/srv-coomuvgl5elc738kkbjg/deploys
          method: POST
          bearerToken: '${{ secrets.RENDER_TOKEN }}'
          data: '{"imageUrl":"${{ needs.build.outputs.image-tag }}"}'